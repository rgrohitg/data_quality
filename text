# IAM Policies (Create separate policies for each service)

resource "aws_iam_policy" "s3_policy" {
  name        = "S3AccessPolicy"
  description = "Grants access to S3"
  policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "s3:GetObject",
          "s3:PutObject" 
        ],
        "Resource": [
          "arn:aws:s3:::your-bucket/*" 
        ]
      }
    ]
  })
}

resource "aws_iam_policy" "efs_policy" {
  name        = "EFSAccessPolicy"
  description = "Grants access to EFS"
  policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "elasticfilesystem:ClientMount",
          "elasticfilesystem:ClientWrite"
        ],
        "Resource": "arn:aws:elasticfilesystem:<region>:<account-id>:file-system/<file-system-id>"
      }
    ]
  })
}

resource "aws_iam_policy" "dynamodb_policy" {
  name        = "DynamoDBAccessPolicy"
  description = "Grants access to DynamoDB"
  policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem"
        ],
        "Resource": "arn:aws:dynamodb:<region>:<account-id>:table/<table-name>"
      }
    ]
  })
}

resource "aws_iam_policy" "sqs_policy" {
  name        = "SQSAccessPolicy"
  description = "Grants access to SQS"
  policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "sqs:SendMessage" 
        ],
        "Resource": "arn:aws:sqs:<region>:<account-id>:<queue-name>"
      }
    ]
  })
}

# IAM Role

resource "aws_iam_role" "ecs_task_role" {
  name = "ecsTaskRole"
  assume_role_policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Action": "sts:AssumeRole",
        "Principal": {
          "Service": "ecs-tasks.amazonaws.com"
        },
        "Effect": "Allow",
        "Sid": ""
      }
    ]
  })
}

# Attach Policies to the Role

resource "aws_iam_role_policy_attachment" "s3_attachment" {
  role       = aws_iam_role.ecs_task_role.name
  policy_arn = aws_iam_policy.s3_policy.arn
}

resource "aws_iam_role_policy_attachment" "efs_attachment" {
  role       = aws_iam_role.ecs_task_role.name
  policy_arn = aws_iam_policy.efs_policy.arn
}

resource "aws_iam_role_policy_attachment" "dynamodb_attachment" {
  role       = aws_iam_role.ecs_task_role.name
  policy_arn = aws_iam_policy.dynamodb_policy.arn
}

resource "aws_iam_role_policy_attachment" "sqs_attachment" {
  role       = aws_iam_role.ecs_task_role.name
  policy_arn = aws_iam_policy.sqs_policy.arn
}

# ECS Task Definition (Assuming you have other parts of the task definition defined)

resource "aws_ecs_task_definition" "your_task_definition" {
  # ... other task definition configurations

  task_role_arn = aws_iam_role.ecs_task_role.arn
}
